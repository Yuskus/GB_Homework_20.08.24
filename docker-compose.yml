version: '3.4'

services:
  homeworkgb10:
    container_name: homeworkgb10
    restart: always
    build:
      context: .
      dockerfile: HomeworkGB10/Dockerfile
    depends_on:
      - db10
    ports:
    - 7000:8080
    networks:
    - mynetwork

  homeworkgb11:
    container_name: homeworkgb11
    restart: always
    build:
      context: .
      dockerfile: HomeworkGB11/Dockerfile
    depends_on:
      - db11
    ports:
    - 8000:8080
    networks:
    - mynetwork

  homeworkgb12:
    container_name: homeworkgb12
    restart: always
    build:
      context: .
      dockerfile: HomeworkGB12/Dockerfile
    depends_on:
      - db12
    ports:
    - 9000:8080
    networks:
    - mynetwork
  
  homeworkgb13:
    container_name: homeworkgb13
    restart: always
    build:
      context: .
      dockerfile: HomeworkGB13/Dockerfile
    depends_on:
      - homeworkgb10
      - homeworkgb11
      - homeworkgb12
    ports:
    - 10000:8080
    networks:
    - mynetwork
  
  db10:
    image: postgres:16.4-alpine3.20
    container_name: db10
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "22011995"
      POSTGRES_DB: StorageDb
    volumes:
    - database10:/var/lib/postgresql/db10/data
    ports:
    - 5100:5432
    networks:
    - mynetwork

  db11:
    image: postgres:16.4-alpine3.20
    container_name: db11
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "22011995"
      POSTGRES_DB: EmployeesDb
    volumes:
    - database11:/var/lib/postgresql/db11/data
    ports:
    - 5200:5432
    networks:
    - mynetwork

  db12:
    image: postgres:16.4-alpine3.20
    container_name: db12
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "22011995"
      POSTGRES_DB: AuthenticateDb
    volumes:
    - database12:/var/lib/postgresql/db12/data
    ports:
    - 5300:5432
    networks:
    - mynetwork
  
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports: 
      - 5000:8080
    networks:
    - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  database10:
  database11:
  database12:
